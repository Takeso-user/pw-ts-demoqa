name: DemoQA Tests CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      test_tag:
        description: "Cucumber tag expression to run specific tests"
        required: false
        default: ""
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run tests based on workflow input or default to all tests
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.test_tag }}" ]; then
            echo "Running tests with tag: ${{ github.event.inputs.test_tag }}"
            npx cross-env TEST_MODE=ci cucumber-js --tags "${{ github.event.inputs.test_tag }}"
          else
            echo "Running all tests"
            npm run test:ci
          fi

      - name: Generate Allure report
        if: always()
        run: |
          # Ensure allure-results directory exists
          mkdir -p allure-results
          # Generate report even if no results (empty report)
          npm run allure:generate || {
            echo "Allure generation failed, creating empty report structure"
            mkdir -p allure-report
            echo '{"name":"Empty Report","children":[]}' > allure-report/data.json
          }

      - name: Create navigation index
        if: always()
        run: |
          # Create navigation page with current timestamp
          CURRENT_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          cat > allure-report/navigation.html << EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Test Reports - DemoQA</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                  .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                  h1 { color: #333; text-align: center; margin-bottom: 30px; }
                  .report-link { display: block; background: #007bff; color: white; padding: 15px 20px; margin: 10px 0; text-decoration: none; border-radius: 5px; text-align: center; transition: background-color 0.3s; }
                  .report-link:hover { background: #0056b3; }
                  .description { color: #666; text-align: center; margin: 20px 0; }
                  .info-block { background: #e9ecef; padding: 15px; border-radius: 5px; margin: 20px 0; }
                  .commit-info { font-size: 0.9em; color: #495057; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>ðŸ§ª DemoQA Test Reports</h1>
                  <p class="description">Automated test results for the DemoQA application</p>
                  
                  <a href="./index.html" class="report-link">ðŸ“Š View Allure Test Report</a>
                  
                  <div class="info-block">
                      <div class="commit-info">
                          <strong>Build:</strong> #${{ github.run_number }}<br>
                          <strong>Commit:</strong> ${{ github.sha }}<br>
                          <strong>Branch:</strong> ${{ github.ref_name }}<br>
                          <strong>Generated:</strong> ${CURRENT_DATE}
                      </div>
                  </div>
                  
                  <p class="description">
                      <small>This report is automatically generated by GitHub Actions</small>
                  </p>
              </div>
          </body>
          </html>
          EOF

      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: screenshots/

      - name: Upload Cucumber report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report
          path: cucumber-report*.html

  deploy-report:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true # Ensure Pages is enabled

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
